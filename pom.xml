<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>arrow.projects</groupId>
    <artifactId>business_traceability</artifactId>
    <version>3.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>business_traceability</name>
    <properties>
        <!-- Set encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- compiler - to set JDK version -->
        <version.maven-compiler-plugin>3.1</version.maven-compiler-plugin>
        <!-- war - config war content -->
        <version.maven-war-plugin>2.4</version.maven-war-plugin>
        <!-- surefire - config unit test runner -->
        <version.maven-surefire-plugin>2.16</version.maven-surefire-plugin>
        <!-- JSF -->
        <version.jsf-api>2.2.8</version.jsf-api>
        <!-- primefaces Community Version - http://www.primefaces.org/downloads -->
        <version.primefaces>5.2</version.primefaces>
        <!-- Omnifaces -http://omnifaces.org/ -->
        <version.omnifaces>2.0</version.omnifaces>
        <!-- Deltaspike - https://deltaspike.apache.org/download.html -->
        <deltaspike.version>1.5.1</deltaspike.version>
        <!-- Freemarker - for template -->
        <version.freemarker>2.3.20</version.freemarker>
        <!-- Jacoco - for Test coverage -->
        <jacoco.version>0.7.5.201505241946</jacoco.version>
        <!-- Jmockit - for mock -->
        <jmockit.version>1.20</jmockit.version>
        <!-- wildfly - web server -->
        <wildfly.version>8.2.1.Final</wildfly.version>
        <!-- For auto deployment -->
        <version.plugin.wildfly.maven>1.0.1.Final</version.plugin.wildfly.maven>
        <wildfly.server>192.168.1.3</wildfly.server>
        <wildfly.remote.port>9990</wildfly.remote.port>
        <wildfly.remote.username>wildfly</wildfly.remote.username>
        <wildfly.remote.password>wildfly</wildfly.remote.password>
        <wildfly.remote.force>true</wildfly.remote.force>
        <test.skip>false</test.skip>
        <shrinkwrap.version>2.2.0</shrinkwrap.version>
        <aether.version>1.0.2.v20150114</aether.version>
        <arquillian-jacoco.version>1.0.0.Alpha8</arquillian-jacoco.version>
        <arquillian-suite.version>1.1.1</arquillian-suite.version>
        <version.arquillian_persistence>1.0.0.Alpha7</version.arquillian_persistence>
        <sonar.host.url>http://192.168.1.3:8864</sonar.host.url>
        <sonar.login>builder</sonar.login>
        <sonar.password>123456</sonar.password>
        <findbugs.version>3.0.1</findbugs.version>
        <findbugs.maven.version>3.0.2</findbugs.maven.version>
        <findbugs.annotations>1.3.2</findbugs.annotations>
        <sonar.version>2.4</sonar.version>
        <test.reported-classes>*.class</test.reported-classes>
        <test.executed-files>*.java</test.executed-files>
        <test.excluded-files></test.excluded-files>
        <localRepo>${settings.localRepository}</localRepo>
        <jackson.version>2.7.0</jackson.version>


        <!-- settings -->
        <findbugs.skip>false</findbugs.skip>
        <checkstyle.skip>false</checkstyle.skip>
        <test.skip>false</test.skip>
        <surefireArgLine></surefireArgLine>
    </properties>
    <!-- Additional repositories run local server if comment h -->
    <repositories>
        <repository>
            <id>sars</id>
            <name>SARS Repo</name>
            <url>http://192.168.1.3:1104/content/groups/sars/</url>
        </repository>
        <repository>
            <id>jboss</id>
            <name>jboss</name>
            <url>https://repository.jboss.org/nexus/content/groups/public-jboss</url>
        </repository>
        <repository>
            <id>prime-repo</id>
            <name>PrimeFaces Maven Repository</name>
            <url>http://repository.primefaces.org</url>
        </repository>
        <repository>
            <id>projectRepo</id>
            <name>Repository of Project</name>
            <url>file:${project.basedir}/mavenrepo</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>SARS Repo</id>
            <url>http://192.168.1.3:1104/content/groups/sars</url>
        </pluginRepository>
        <pluginRepository>
            <id>Codehaus repository</id>
            <url>http://central.maven.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.2.0.Alpha1-SNAPSHOT</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-7.0</artifactId>
                <version>1.0.0.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-spec-api</artifactId>
                <version>${wildfly.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- Process Japanese Languages -->
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>56.1</version>
        </dependency>
        <!-- http://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.7</version>

        </dependency>
		<dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.12</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4.1207.jre7</version>
            <scope>test</scope>
        </dependency>
        <!-- RESTeasy for RESTful WS -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-cdi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
            <!--$NO-MVN-MAN-VER$ -->
            <scope>compile</scope>
        </dependency>
        <!-- JTA 1.2 Implementation -->
        <dependency>
            <groupId>org.jboss.narayana.jts</groupId>
            <artifactId>narayana-jts-jacorb</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- JPA 2.1 API (JSR-339) -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- For Date/Time manipulate -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.3</version>
            <!--$NO-MVN-MAN-VER$ -->
        </dependency>
        <!-- Common Annotations 1.2 API (JSR-250) -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- CDI 1.2 API (JSR-346) -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
            <version>1.2</version>
            <!--$NO-MVN-MAN-VER$ -->
        </dependency>
        <!-- EJB 3.2 API (JSR-345) -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- EL 3.0 API (JSR-341) -->
        <dependency>
            <groupId>org.jboss.spec.javax.el</groupId>
            <artifactId>jboss-el-api_3.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- JSF 2.2 API (JSR-344) -->
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <scope>provided</scope>
            <version>${version.jsf-api}</version>
        </dependency>
        <!-- Declare Mojarra JSF implementation here just to run debugger thru
            JSF source -->
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Bean Validation 1.1 API (JSR-349) -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Declare JPA implementation (Hibernate) dependency here because we
            use some Hibernate feature directly -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>
        <!-- Dependencies added only for debugging -->
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-servlet</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- GUI Library -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>${version.primefaces}</version>
        </dependency>
        <!-- Using All themes -->
        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>all-themes</artifactId>
            <version>1.0.10</version>
        </dependency>
        <dependency>
            <groupId>org.primefaces.extensions</groupId>
            <artifactId>primefaces-extensions</artifactId>
            <version>3.2.0</version>
        </dependency>
        <!-- for some text processing -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.2</version>
            <!--$NO-MVN-MAN-VER$ -->
        </dependency>
        <!-- export excel -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.10-FINAL</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.10-FINAL</version>
        </dependency>
        <!-- Support generate code -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${version.freemarker}</version>
        </dependency>
        <!-- for schedule jobs -->
        <dependency>
            <groupId>javax.enterprise.concurrent</groupId>
            <artifactId>javax.enterprise.concurrent-api</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <version>1.5.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>${version.omnifaces}</version>
        </dependency>
        <!--schedeluer config Quartz, DeltaSpike -->
        <!-- Delta Spike 1.0.0 -->
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-impl</artifactId>
            <version>${deltaspike.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-scheduler-module-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-scheduler-module-impl</artifactId>
            <version>${deltaspike.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-jpa-module-impl</artifactId>
            <version>${deltaspike.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-jpa-module-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-data-module-impl</artifactId>
            <version>${deltaspike.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-data-module-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-partial-bean-module-impl</artifactId>
            <version>${deltaspike.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-partial-bean-module-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.cdictrl</groupId>
            <artifactId>deltaspike-cdictrl-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- Scheduler -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>
        <!-- convert kanji -->
        <dependency>
            <groupId>com.arrow</groupId>
            <artifactId>kakasi-java</artifactId>
            <version>1.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.atilika.kuromoji</groupId>
            <artifactId>kuromoji</artifactId>
            <version>0.7.7</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-ee</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.1.1</version>
        </dependency>
        <!-- Easier writing assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>1.6.1</version>
            <scope>test</scope>
        </dependency>
        <!-- Arquillian -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- BEGIN: Shrinkwrap -->

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-spi</artifactId>
            <scope>test</scope>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-api-maven-archive</artifactId>
            <scope>test</scope>
            <version>2.2.2</version>
        </dependency>
        <!-- END -->


        <!-- BEGIN: maven aether -->

        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-aether-provider</artifactId>
            <scope>test</scope>
            <version>3.3.9</version>
        </dependency>

        <!-- END -->


        <!-- BEGIN: aether -->

        <dependency>
            <groupId>org.eclipse.aether</groupId>
            <artifactId>aether-impl</artifactId>
            <version>1.0.2.v20150114</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.aether</groupId>
            <artifactId>aether-spi</artifactId>
            <version>1.0.2.v20150114</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.aether</groupId>
            <artifactId>aether-api</artifactId>
            <version>1.0.2.v20150114</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.aether</groupId>
            <artifactId>aether-util</artifactId>
            <version>1.0.2.v20150114</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <!--$NO-MVN-MAN-VER$ -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.core</artifactId>
            <version>${jacoco.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-persistence-api</artifactId>
            <version>1.0.0.Alpha7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-persistence-dbunit</artifactId>
            <version>1.0.0.Alpha7</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!-- Exclude the old version 2.2 to use version 3.0 below -->
                    <groupId>org.dbunit</groupId>
                    <artifactId>dbunit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.5.1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-jacoco</artifactId>
            <version>${arquillian-jacoco.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>${findbugs.annotations}</version>
        </dependency>
        <!-- JXLS -->
        <dependency>
            <groupId>org.jxls</groupId>
            <artifactId>jxls</artifactId>
            <version>2.2.8</version>
        </dependency>
        <dependency>
            <groupId>org.jxls</groupId>
            <artifactId>jxls-poi</artifactId>
            <version>1.0.7</version>
        </dependency>
        <!-- ElasticSearch -->
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>2.1.1</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.1.3</version>
            <!--$NO-MVN-MAN-VER$ -->
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
            <!--$NO-MVN-MAN-VER$ -->
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
            <!--$NO-MVN-MAN-VER$ -->
        </dependency>
        <!-- Lucene -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>5.3.1</version>
            <!--$NO-MVN-MAN-VER$ -->
        </dependency>
     	
        <!-- csv -->
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>3.7</version>
        </dependency>
        <!-- Support auto detect file encoding -->
        <dependency>
            <groupId>arrow.thirdparty.lib</groupId>
            <artifactId>juniversalchardet</artifactId>
            <version>1.0.3</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- This plugin is used for adding src/generated/java as source folder -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/generated/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <localCheckout>true</localCheckout>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.plugin.wildfly.maven}</version>
                <configuration>
                    <hostname>${wildfly.server}</hostname>
                    <port>${wildfly.remote.port}</port>
                    <username>${wildfly.remote.username}</username>
                    <password>${wildfly.remote.password}</password>
                    <force>${wildfly.remote.force}</force>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.maven-war-plugin}</version>
                <configuration>
                    <warSourceDirectory>${basedir}/WebContent</warSourceDirectory>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <skip>${checkstyle.skip}</skip>
                            <configLocation>config_files/sars_checkstyles.xml</configLocation>
                            <suppressionsLocation>./config_files/checkstyle-suppression.xml</suppressionsLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven-compiler-plugin}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <configuration>
                    <skip>${test.skip}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs.maven.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <xmlOutput>true</xmlOutput>
                    <!-- Optional directory to put findbugs xdoc xml report -->
                    <xmlOutputDirectory>target/site</xmlOutputDirectory>
                    <excludeFilterFile>config_files/findbugs-exclude.xml</excludeFilterFile>
                    <!-- <includeFilterFile>config_files/findbugs-include.xml</includeFilterFile> -->
                    <failOnError>true</failOnError>
                    <omitVisitors>
                        BuildInterproceduralCallGraph,CheckCalls,FindCircularDependencies,FindFloatMath,FindHEmismatch,FindNonSerializableStoreIntoSession,FindNonSerializableValuePassedToWriteObject,FindReturnRef,InheritanceUnsafeGetResource,LoadOfKnownNullValue,Naming,Noise,NoiseNullDeref,NoteNonNullAnnotations,NoteNonnullReturnValues,ResolveAllReferences,SerializableIdiom,TestASM,TestDataflowAnalysis,TestingGround,TestingGround2,UnreadFields,WrongMapIterator
                    </omitVisitors>
                </configuration>
                <executions>
                    <execution>
                        <id>analyze-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <skip>${findbugs.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                    only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-checkstyle-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.17,)
                                        </versionRange>
                                        <goals>
                                            <goal>check</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.codehaus.mojo
                                        </groupId>
                                        <artifactId>
                                            findbugs-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [3.0.2,)
                                        </versionRange>
                                        <goals>
                                            <goal>check</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <!-- Dependencies for Test -->
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>4.12</version>
                    <!--$NO-MVN-MAN-VER$ -->
                    <scope>test</scope>
                </dependency>
                <!-- Easier writing assertions -->
                <dependency>
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-core</artifactId>
                    <version>1.6.1</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <configuration>
                            <excludes>
                                <exclude>*$Impl_*</exclude>
                                <exclude>**/persistence/**/*.class</exclude>
                                <exclude>**/framework/**/*.class</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <!-- Prepares the property pointing to the JaCoCo runtime agent which
                                is passed as VM argument when Maven the Surefire plugin is executed. -->
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                                    <!-- Sets the name of the property containing the settings for JaCoCo
                                        runtime agent. -->
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>
                            <!-- Ensures that the code coverage report for unit tests is created
                                after unit tests have been run. -->
                            <execution>
                                <id>post-unit-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                    <includes>
                                        <!-- <include>${test.reported-classes}</include> -->
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.maven-surefire-plugin}</version>
                        <configuration>
                            <systemPropertyVariables>
                                <!--<log4j.configurationFile>log4j2.xml</log4j.configurationFile> -->
                            </systemPropertyVariables>
                            <skip>${test.skip}</skip>
                            <!-- Sets the VM argument line used when unit tests are run. -->
                            <argLine>${surefireArgLine}</argLine>
                            <excludes>
                                <exclude>**/*IT.java</exclude>
                                <!-- <exclude>${test.excluded-files}</exclude> -->
                            </excludes>
                            <includes>
                                <!-- <include>${test.executed-files}</include> -->
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>jmockit</id>
            <dependencies>
                <!-- Dependencies for Test -->
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit-coverage</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>4.12</version>
                    <!--$NO-MVN-MAN-VER$ -->
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.maven-surefire-plugin}</version>
                        <configuration>
                            <systemPropertyVariables>
                                <coverage-outputDir>target/jmockit-coverage-report</coverage-outputDir>
                            </systemPropertyVariables>
                            <excludes>
                                <exclude>**/*IT.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>deployment</id>
            <properties>
                <wildfly.server>133.242.237.129</wildfly.server>
                <wildfly.remote.port>9990</wildfly.remote.port>
                <wildfly.remote.username>wildfly</wildfly.remote.username>
                <wildfly.remote.password>sars2014</wildfly.remote.password>
                <wildfly.remote.force>false</wildfly.remote.force>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.plugin.wildfly.maven}</version>
                        <configuration>

                            <hostname>${wildfly.server}</hostname>
                            <port>${wildfly.remote.port}</port>
                            <username>${wildfly.remote.username}</username>
                            <password>${wildfly.remote.password}</password>
                            <force>${wildfly.remote.force}</force>
                            <protocol>HTTP/1.1</protocol>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.maven-war-plugin}</version>
                        <configuration>
                            <warSourceDirectory>${basedir}/WebContent</warSourceDirectory>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <webResources>
                                <resource>
                                    <directory>profile/deploy/WEB-INF</directory>
                                    <!-- override the destination directory for this resource -->
                                    <targetPath>WEB-INF</targetPath>
                                </resource>
                                <resource>
                                    <directory>src/css_js</directory>
                                    <targetPath>WEB-INF/includes</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>uat</id>
            <properties>
                <wildfly.server>192.168.1.4</wildfly.server>
                <wildfly.remote.port>9992</wildfly.remote.port>
                <wildfly.remote.username>wildfly</wildfly.remote.username>
                <wildfly.remote.password>wildfly</wildfly.remote.password>
                <wildfly.remote.force>true</wildfly.remote.force>
            </properties>
            <dependencies>
                <!-- Dependencies for Test -->
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit-coverage</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>4.12</version>
                    <!--$NO-MVN-MAN-VER$ -->
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.maven-war-plugin}</version>
                        <configuration>
                            <warName>sars_uat</warName>
                            <warSourceDirectory>${basedir}/WebContent</warSourceDirectory>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <webResources>
                                <resource>
                                    <directory>profile/uat/WEB-INF</directory>
                                    <!-- override the destination directory for this resource -->
                                    <targetPath>WEB-INF</targetPath>
                                </resource>
                                <resource>
                                    <directory>src/css_js</directory>
                                    <targetPath>WEB-INF/includes</targetPath>
                                </resource>
                                <resource>
                                    <directory>profile/uat/META-INF</directory>
                                    <targetPath>WEB-INF/classes/META-INF</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>it</id>
            <properties>
                <wildfly.server>192.168.1.4</wildfly.server>
                <wildfly.remote.port>9994</wildfly.remote.port>
                <wildfly.remote.username>wildfly</wildfly.remote.username>
                <wildfly.remote.password>wildfly</wildfly.remote.password>
                <wildfly.remote.force>true</wildfly.remote.force>
            </properties>
            <dependencies>
                <!-- Dependencies for Test -->
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit-coverage</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>4.12</version>
                    <!--$NO-MVN-MAN-VER$ -->
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.plugin.wildfly.maven}</version>
                        <configuration>
                            <filename>sars_it.war</filename>
                            <hostname>${wildfly.server}</hostname>
                            <port>${wildfly.remote.port}</port>
                            <username>${wildfly.remote.username}</username>
                            <password>${wildfly.remote.password}</password>
                            <force>${wildfly.remote.force}</force>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.maven-war-plugin}</version>
                        <configuration>
                            <warName>sars_it</warName>
                            <warSourceDirectory>${basedir}/WebContent</warSourceDirectory>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <webResources>
                                <resource>
                                    <directory>profile/it/WEB-INF</directory>
                                    <!-- override the destination directory for this resource -->
                                    <targetPath>WEB-INF</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <dependencies>
                <!-- Dependencies for Test -->
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>4.12</version>
                    <!--$NO-MVN-MAN-VER$ -->
                    <scope>test</scope>
                </dependency>
                <!-- Easier writing assertions -->
                <dependency>
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-core</artifactId>
                    <version>1.6.1</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.7</version>
                        <executions>
                            <execution>
                                <id>test</id>
                                <!-- here the phase you need -->
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>profile/docker/resources</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.maven-war-plugin}</version>
                        <configuration>
                            <warSourceDirectory>${basedir}/WebContent</warSourceDirectory>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <webResources>
                                <resource>
                                    <directory>profile/docker/WEB-INF</directory>
                                    <targetPath>WEB-INF</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>wildfly-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit</artifactId>
                    <version>${jmockit.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.extension</groupId>
                    <artifactId>arquillian-jacoco</artifactId>
                    <version>${arquillian-jacoco.version}</version>
                    <scope>test</scope>
                </dependency>
                <!-- Dependencies for Test -->
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>4.12</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>xalan</groupId>
                    <artifactId>xalan</artifactId>
                    <version>2.7.1</version>
                    <scope>test</scope>
                </dependency>
                <!-- http://mvnrepository.com/artifact/org.arquillian.container/arquillian-container-chameleon -->
                <dependency>
                    <groupId>org.arquillian.container</groupId>
                    <artifactId>arquillian-container-chameleon</artifactId>
                    <version>1.0.0.Alpha6</version>
                    <scope>test</scope>
                </dependency>

                <dependency>
                    <groupId>org.jboss.arquillian.extension</groupId>
                    <artifactId>arquillian-persistence-api</artifactId>
                    <version>1.0.0.Alpha7</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.extension</groupId>
                    <artifactId>arquillian-persistence-dbunit</artifactId>
                    <version>1.0.0.Alpha7</version>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <!-- Exclude the old version 2.2 to use version 3.0 below -->
                            <groupId>org.dbunit</groupId>
                            <artifactId>dbunit</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.dbunit</groupId>
                    <artifactId>dbunit</artifactId>
                    <version>2.5.1.1</version>
                    <scope>test</scope>
                </dependency>

            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-wildfly-managed</directory>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <executions>
                            <execution>
                                <id>pre-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.8</version>
                        <executions>

                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <outputDirectory>
                                                ${project.basedir}/server/wildfly-dist_${wildfly.version}
                                            </outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>

                            <execution>
                                <id>copy-db-driver</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <stripVersion>true</stripVersion>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>postgresql</groupId>
                                            <artifactId>postgresql</artifactId>
                                            <version>9.1-901-1.jdbc4</version>

                                            <outputDirectory>
                                                ${project.basedir}/server/wildfly-dist_${wildfly.version}/wildfly-${wildfly.version}/standalone/deployments
                                            </outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${version.maven-compiler-plugin}</version>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                            <!-- Exclude Unit Test, which are using JMockit -->
                            <testExcludes>
                                <testExclude>**/*Test.java</testExclude>
                            </testExcludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.19</version>
                        <configuration>
                            <forkMode>always</forkMode>
                            <systemPropertyVariables>
                                <arquillian.launch>wildfly-managed</arquillian.launch>
                            </systemPropertyVariables>
                            <redirectTestOutputToFile>false</redirectTestOutputToFile>
                            <argLine>${surefireArgLine}</argLine>
                            <excludes>
                                <exclude>**/*Test.java</exclude>
                            </excludes>
                            <includes>
                                <include>**/*Suite.java</include>
                            </includes>
                            <environmentVariables>
                                <JBOSS_HOME>
                                    ${project.basedir}/server/wildfly-dist_${wildfly.version}/wildfly-${wildfly.version}
                                </JBOSS_HOME>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <description>Sales Activity Report System</description>
</project>
